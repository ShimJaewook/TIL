1. 스프링 프래임워크의 정의
- 프레임워크를 사용하는 이유
○ 비기능적인 요소들을 초기 개발 단계마다 구현해야 하는 불합리함을 극복해준다.
○ 기능적인(Functional) 요구사항에 집중할 수 있도록 해준다.
○ 디자인 패턴과 마찬가지로 반복적으로 발견되는 문제를 해결하기 위한 특화된 Solution을 제공한다.

	2. 프레임워크와 디자인패턴과의 상관 관계
		a. 디자인 패턴은 프레임워크의 핵심적인 특징이고, 프레임워크를 사용하는 애플리케이션에 그 패턴이 적용된다는 
		특징을 가지고 있다. 하지만 프레임워크는 디자인 패턴이 아니다.
			i. 디자인 패턴은 어플리케이션을 설계할 때 필요한 구조적인 가이드라인이 되어 줄 수는 있지만 구체적으로 구현된 기반코드를 제공하지 않는다.
			ii. 프레임워크는 디자인 패턴과 함께 패턴이 적용 된 기반 클래스 라이브러리를 제공해서 프레임워크를 사용하는 구조적인 틀과 구현코드를 함께 제공한다.
		
	3. Spring Framework란?
: Java 엔터프라이즈 개발을 편하게 해주는 오픈소스 경량급 애플리케이션 프레임워크이다.